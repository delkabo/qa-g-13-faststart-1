package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import com.codeborne.selenide.Condition;
import io.qameta.allure.Description;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.w3c.dom.Text;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.filter;
import static com.codeborne.selenide.Selectors.byText;


public class GeneratedTests extends TestBase {

    @Test
    @Description("Test Autorization")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://www.litres.ru/'", () ->
                open("https://www.litres.ru/"));

        step("choose enter in lk", () ->
                $(".Login-module__loginLink").click());

        step("", () -> $(".Button-module__primary_orange").click());

        step("", () -> $(".AuthorizationPopup-module__input").setValue("delkabo@yandex.ru"));

        step("", () -> $(".childContainer-0-2-4").click());

        step("", () -> $(".AuthorizationPopup-module__input").setValue("Kam1naLitRes969!"));

        step("", () -> $(".childContainer-0-2-4").click());

        step("", () ->
                $(".Profile-module__profileLink").shouldHave(visible));
    }

        @Test
        @Description("Find Book")
        @DisplayName("find book 'Война и Мир'")
        void findBook() {

            step("Open url 'https://www.litres.ru/'", () ->
                    open("https://www.litres.ru/"));

            step("choose enter in lk", () ->
                    $(".Search-module__input").setValue("Война и мир").pressEnter());

            step("choose enter in lk", () ->
                    $(".Search-module__input").setValue("Война и мир").pressEnter());

            $("#search__content").shouldHave(text("Война и мир"));
        }

    @Test
    @Description("Find Book")
    @DisplayName("find book 'Война и Мир'")
    void test1() {

        step("Open url 'https://www.litres.ru/'", () ->
                open("https://www.litres.ru/"));

        step("choose enter in lk", () ->
                $(".LowerMenu-module__popoverContentWrapp").click());

        step("choose enter in lk", () ->
                $$(".MoreMenu-module__text").findBy(text("Подборки")).click());

        $(".grouped__collection").shouldHave(text("Подборки"));
    }

    @Test
    @Description("Find Book")
    @DisplayName("find book 'Война и Мир'")
    void test2() {

        step("Open url 'https://www.litres.ru/'", () ->
                open("https://www.litres.ru/"));

        step("choose enter in lk", () ->
                $$(".LowerMenu-module__item").findBy(text("Популярное")).click());

        step("choose enter in lk", () ->
                $(".book_ratings").shouldHave(text("Книжные бестселлеры")));
    }

    @Test
    @Description("Find Book")
    @DisplayName("find book 'Война и Мир'")
    void test3() {

        step("Open url 'https://www.litres.ru/'", () ->
                open("https://www.litres.ru/"));

        step("choose enter in lk", () ->
                $(".LowerMenu-module__genres").click());

        step("choose enter in lk", () ->
        $("div[data-header-popup=\"genres\"]").$(byText("Хобби, досуг")).click());

        step("choose enter in lk", () ->
                $(".new-container").shouldHave(text("Хобби, досуг")));
    }

// удалить тест ниже
    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://github.com/login'", () ->
            open("https://github.com/login"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}